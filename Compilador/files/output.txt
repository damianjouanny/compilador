
*************************
Resultado del análisis: 
Exitoso - Sin errores

*************************
Construcciones sintacticas: 
Sintactico: Declaración de variables-- Linea: 2-- Tipo: Regla
Sintactico: Asignacion-- Linea: 4-- Tipo: Regla
Sintactico: Asignacion-- Linea: 7-- Tipo: Regla
Sintactico: Sentencia Print-- Linea: 8-- Tipo: Regla
Sintactico: Sentencia For-- Linea: 10-- Tipo: Regla
Sintactico: Sentencia If Incompleta-- Linea: 10-- Tipo: Regla

*************************
Tabla de símbolos: 
Token: PalabraReservada: string --- Lexema: For dentro de if --- Linea: 8
Token: PalabraReservada: ID --- Lexema: _PARAM --- Linea: 0
Token: PalabraReservada: ID --- Lexema: x_main --- Linea: 2
Token: PalabraReservada: CTE --- Lexema: 1 --- Linea: 7
Token: PalabraReservada: ID --- Lexema: x_main --- Linea: 7
Token: PalabraReservada: ID --- Lexema: y_main --- Linea: 2
Token: PalabraReservada: ID --- Lexema: y_main --- Linea: 2
Token: PalabraReservada: CTE --- Lexema: 3 --- Linea: 7
Token: PalabraReservada: CTE --- Lexema: 10 --- Linea: 6

*************************
Tercetos generados: 
( 0: =, y_main, 10 )
( 1: ==, y_main, 10 )
( 2: BF, NULL, NULL )
( 3: =, x_main, 1 )
( 4: Label, NULL, NULL )
( 5: <=, x_main, 3 )
( 6: BF, NULL, NULL )
( 7: Print, For dentro de if, NULL )
( 8: +, x_main, 1 )
( 9: =, x_main, [8] )
( 10: BI, NULL, NULL )
( 11: Label, NULL, NULL )
( 12: Label, NULL, NULL )

*************************
.386
.model flat, stdcall
option casemap :none
include \masm32\include\windows.inc
include \masm32\include\kernel32.inc
include \masm32\include\user32.inc
include \masm32\include\masm32.inc
includelib \masm32\lib\kernel32.lib
includelib \masm32\lib\user32.lib
includelib \masm32\lib\user32.lib
.DATA
_y_main DD 0
_x_main DD 0
_1 DD 1
cadena0 DB 'For dentro de if'
OVERFLOW_SUMA_MESSAGE DB "Fuera de rango en Suma$",0
.CODE
OVERFLOW_SUMA:
invoke MessageBox, NULL, addr OVERFLOW_SUMA_MESSAGE, addr OVERFLOW_SUMA_MESSAGE, MB_OK 
invoke ExitProcess,0
SALIR:
invoke ExitProcess,0			; DOS: termina el programa
START:
MOV _y_main, 10
MOV EBX, _y_main
CMP EBX, 10
JNE _etiq12
MOV _x_main, 1
_etiq4: 
MOV EBX, _x_main
CMP EBX, 3
JNBE _etiq11
invoke MessageBox, NULL, addr cadena0, addr cadena0, MB_OK
MOV EBX, _x_main
ADD EBX, _1
JC OVERFLOW_SUMA
MOV _x_main, EBX
JMP _etiq4
_etiq11: 
_etiq12: 
JMP SALIR
END START
