
*************************
Resultado del análisis: 
Exitoso - Sin errores

*************************
Construcciones sintacticas: 
Sintactico: Declaración de variables-- Linea: 2-- Tipo: Regla
Sintactico: Declaración de variables-- Linea: 5-- Tipo: Regla
Sintactico: Operación de suma-- Linea: 7-- Tipo: Regla
Sintactico: Asignacion-- Linea: 7-- Tipo: Regla
Sintactico: Asignacion-- Linea: 8-- Tipo: Regla
Sintactico: Declaración de Funcion-- Linea: 10-- Tipo: Regla
Sintactico: Llamado a funcion-- Linea: 11-- Tipo: Regla
Sintactico: Asignacion-- Linea: 11-- Tipo: Regla

*************************
Tabla de símbolos: 
Token: PalabraReservada: ID --- Lexema: func1 --- Linea: 4
Token: PalabraReservada: ID --- Lexema: param_func1 --- Linea: 4
Token: PalabraReservada: ID --- Lexema: _PARAM --- Linea: 0
Token: PalabraReservada: ID --- Lexema: a_main --- Linea: 2
Token: PalabraReservada: ID --- Lexema: i_main --- Linea: 2
Token: PalabraReservada: ID --- Lexema: _RET --- Linea: 0
Token: PalabraReservada: ID --- Lexema: color_main --- Linea: 2
Token: PalabraReservada: ID --- Lexema: color --- Linea: 10
Token: PalabraReservada: ID --- Lexema: a --- Linea: 5
Token: PalabraReservada: CTE --- Lexema: 5 --- Linea: 7
Token: PalabraReservada: ID --- Lexema: e_main --- Linea: 2
Token: PalabraReservada: ID --- Lexema: a_func1 --- Linea: 5
Token: PalabraReservada: CTE --- Lexema: 0 --- Linea: 0
Token: PalabraReservada: ID --- Lexema: e --- Linea: 7
Token: PalabraReservada: CTE --- Lexema: 10 --- Linea: 7
Token: PalabraReservada: ID --- Lexema: func1 --- Linea: 4

*************************
Tercetos generados: 
( Label, NULL, NULL )
( BI, NULL, NULL )
( Label, NULL, NULL )
( Push, NULL, NULL )
( =, param_func1, _PARAM )
( +, 10, 5 )
( =, a, [5] )
( =, e, a )
( =, _RET, 0 )
( Retorno, 0, NULL )
( Label, NULL, NULL )
( =, _PARAM, e )
( Call, [2], NULL )
( =, color, _RET )

*************************
.MODEL small
.386
.STACK 200h
.DATA
__PARAM DB _PARAM
_color DB color
_e DB e
__RET DB _RET
_a DB a
_a DB a
_e DB e
_RET DB RET
_param_func1 DB param_func1
OVERFLOW_SUMA_MESSAGE DB "Fuera de rango en Suma$"
.CODE
OVERFLOW_SUMA:
MOV dx, OFFSET OVERFLOW_SUMA_MESSAGE
MOV ah, 9
int 21h
JMP SALIR
SALIR:
MOV ah,4ch			; DOS: termina el programa
MOV al,0			; el código de retorno será 0
INT 21h			; termina el programa
START:
MOV ax,@DATA ;obtener la posicion de los datos
MOV ds,ax ; cargar el segmento de datos con el puntero
_etiq0: 
JMP _etiq10
_etiq2: 
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV EBX, __PARAM
MOV _param_func1, EBX
MOV EBX, 10
ADD EBX, 5
JC OVERFLOW_SUMA
MOV _a, EBX
MOV EBX, _a
MOV _e, EBX
MOV __RET, 0
POP DX
POP CX
POP BX
POP AX
ret
_etiq10: 
MOV EBX, _e
MOV __PARAM, EBX
CALL _etiq2
MOV EBX, __RET
MOV _color, EBX
JMP SALIR
END START
